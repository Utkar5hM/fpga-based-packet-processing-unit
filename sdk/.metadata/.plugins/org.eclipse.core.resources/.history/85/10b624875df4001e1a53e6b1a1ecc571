

/***************************** Include Files *******************************/
#include "ecemptcamip.h"
#include "xil_io.h"
/************************** Function Definitions ***************************/

void ECEMPTCAMIP_mWriteReg(u32 BaseAddress, unsigned RegOffset, u32 Data){
	Xil_Out32((BaseAddress) + (RegOffset), (u32)(Data));
}

u32 ECEMPTCAMIP_mReadReg(u32 BaseAddress, unsigned RegOffset){
	 return Xil_In32((BaseAddress) + (RegOffset));
}

void ECEMPTCAMIP_setKey(u32 BaseAddress, u8 Address, u8 Data, u32 Key, u32 KeyMask){

	// Set Key
	ECEMPTCAMIP_mWriteReg(BaseAddress, 4*1, Key);

	// Set Key Mask
	ECEMPTCAMIP_mWriteReg(BaseAddress, 4*2, KeyMask);

	//	Set Address[4:0], data[9:5], set_clr[10]=0,set_valid[11]=1, req_valid[12]=0
	u32 RegData =0;
	// Mask Address and Data to use only lower 5 bits
	Address &= 0x1F; // 0x1F = 0001 1111 in binary, ensuring only lower 5 bits are used
	Data &= 0x1F;

	// Shift Address and Data to their correct positions and set in RegData
	RegData |= (Address << 0);  // Address is at bits 4:0
	RegData |= (Data << 5);     // Data is at bits 9:5

	// Set set_valid to 1 at bit 11
	RegData |= (1 << 11);       // Set bit 11
	ECEMPTCAMIP_mWriteReg(BaseAddress, 0, RegData);
	return;
}

u32 ECEMPTCAMIP_getData(u32 BaseAddress, u32 Key){
	// set Req_key
	ECEMPTCAMIP_mWriteReg(BaseAddress, 4*3, Key);

	// Set_valid to false and other stuff as well.
	u32 RegData =0;
	ECEMPTCAMIP_mWriteReg(BaseAddress, 0, RegData);

	u8 ResponseReady=0;
	while(ResponseReady==0){
		u32 Response = ECEMPTCAMIP_mReadReg(BaseAddress, 4*5);
		// Extracting out_res_addr from Response[4:0]
	    u8 Address =   // 0x1F = 0001 1111 in binary (mask for lower 5 bits)

	    // Extracting out_res_data from Response[9:5]
	    u8 Data =

	    // Extracting out_req_ready from Response[10]
	    u8 ResponseReady = (u8)((Response >> 10) & 0x01);  // Only need 1 bit

	    // Extracting out_res_valid from Response[11]
	    u8 ResponseValid = (u8)((Response >> 11) & 0x01);  // Only need 1 bit

	    // Extracting out_res_null from Response[12]
	    u8 ResponseNull = (u8)((Response >> 12) & 0x01);  // Only need 1 bit
	    if(ResponseReady) return Response;
	    else {
	    	Delay(100);
	    }
	}
}

u8 ECEMPTCAMIP_getAddr(u32 Response) return ((u8)(Response & 0x1F));

u8 ECEMPTCAMIP_getData(u32 Response) return ((u8)((Response >> 5) & 0x1F));

